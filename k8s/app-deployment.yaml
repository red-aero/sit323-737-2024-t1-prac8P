apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-management-app
  labels:
    app: task-management-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: task-management-app
  template:
    metadata:
      labels:
        app: task-management-app
    spec:
      containers:
        - name: task-management-app
          image: node:18-slim
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: PORT
              value: "3000"
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /app/public
              cp /config/server.js /app/
              cp /config/package.json /app/
              cp /config/index.html /app/public/
              cp /config/styles.css /app/public/
              cp /config/app.js /app/public/
              cd /app
              npm install
              node server.js
          volumeMounts:
            - name: config-volume
              mountPath: /config

          resources:
            limits:
              cpu: "200m"
              memory: "256Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: config-volume
          configMap:
            name: task-management-app-files

---
apiVersion: v1
kind: Service
metadata:
  name: task-management-app-service
spec:
  selector:
    app: task-management-app
  ports:
    - port: 80
      targetPort: 3000
  type: LoadBalancer
